server.port=9000
spring.cloud.config.overrideNone=true

#Eureka server
eureka.client.serviceUrl.defaultZone=http://eureka:password@localhost:9102/eureka
spring.cloud.gateway.discovery.locator.enabled=true

spring.main.web-application-type=reactive

# Keycloak

spring.security.oauth2.resourceserver.jwt.issuer-uri= http://${kc_host}:${kc_port}/realms/${kc_realm}

# The realm configuration
keycloak.realm= ${kc_realm}
keycloak.auth-server-url= http://${kc_host}:${kc_port}/auth
keycloak.ssl-required= external

# The client configuration
keycloak.resource= ${kc_client}
keycloak.bearer-only= true
keycloak.credentials.secret= ${kc_credentials}
keycloak.use-resource-role-mappings= true
keycloak.principal-attribute= preferred_username
#keycloak.corse= true

# microservice-backend-patient
spring.cloud.gateway.routes[0].id=microservice-backend-patient
spring.cloud.gateway.routes[0].uri=lb://microservice-backend-patient
spring.cloud.gateway.routes[0].predicates[0]=Path=/patient/**
spring.cloud.gateway.routes[0].filters[0]=PrefixPath=/microservice-backend-patient/v1

# microservice-backend-note
spring.cloud.gateway.routes[1].id=microservice-backend-note
spring.cloud.gateway.routes[1].uri=lb://microservice-backend-note
spring.cloud.gateway.routes[1].predicates[0]=Path=/note/**
spring.cloud.gateway.routes[1].filters[0]=PrefixPath=/microservice-backend-note/v1

# microservice-backend-assessor-assessor
spring.cloud.gateway.routes[2].id=microservice-backend-assessor-assessor
spring.cloud.gateway.routes[2].uri=lb://microservice-backend-assessor
spring.cloud.gateway.routes[2].predicates[0]=Path=/assessor/**
spring.cloud.gateway.routes[2].filters[0]=PrefixPath=/microservice-backend-assessor/v1

microservice-backend-assessor-trigger
spring.cloud.gateway.routes[3].id=microservice-backend-assessor-trigger
spring.cloud.gateway.routes[3].uri=lb://microservice-backend-assessor
spring.cloud.gateway.routes[3].predicates[0]=Path=/trigger/**
spring.cloud.gateway.routes[3].filters[0]=PrefixPath=/microservice-backend-assessor/v1
